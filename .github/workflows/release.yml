name: Release

on:
  push:
    tags: [v*]

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Extract version
        run: |
          VERSION="${GITHUB_REF_NAME#v}"   # strip leading v
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - 
        name: Version
        run: echo ${VERSION}
      - 
        name: Checkout
        uses: actions/checkout@v5
      - 
        name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25'
      - 
        name: Verify dependencies
        run: go mod verify
      - 
        name: Test
        run: go test -v ./...
      - 
        name: Build
        run: |
          GOOS=linux GOARCH=amd64 go build -o ./corsair-linux-amd64-${VERSION} -ldflags "-s -w -X main.version=${VERSION}" ./cmd/
          GOOS=linux GOARCH=arm64 go build -o ./corsair-linux-arm64-${VERSION} -ldflags "-s -w -X main.version=${VERSION}" ./cmd/
          GOOS=darwin GOARCH=amd64 go build -o ./corsair-darwin-amd64-${VERSION} -ldflags "-s -w -X main.version=${VERSION}" ./cmd/
          GOOS=darwin GOARCH=arm64 go build -o ./corsair-darwin-arm64-${VERSION} -ldflags "-s -w -X main.version=${VERSION}" ./cmd/
          GOOS=windows GOARCH=amd64 go build -o ./corsair-windows-amd64-${VERSION}.exe -ldflags "-s -w -X main.version=${VERSION}" ./cmd/
      - 
        name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          files: |
            corsair-linux-amd64-${{ env.VERSION }}
            corsair-linux-arm64-${{ env.VERSION }}
            corsair-darwin-amd64-${{ env.VERSION }}
            corsair-darwin-arm64-${{ env.VERSION }}
            corsair-windows-amd64-${{ env.VERSION }}
